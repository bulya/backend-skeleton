name: Backend Skeleton
on:
  push:
    branches:
      - main
  pull_request: {}
  schedule:
    - cron:  '0 14 * * MON'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # check-out repo and set-up python
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python 3.12.5
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      # install & configure poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true
      # load cached venv if cache exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      # install dependencies if cache does not exist
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      # run tests
#      - name: Install Python dependencies
#        run: |
#          python3 -m venv venv
#          source ./venv/bin/activate
#          pip install -U pip
#          pip install -r ./requirements.txt
      - name: Run tests on hooks
        run: |
          source .venv/bin/activate
          inv test.hooks
#      - name: Run tests on building project
#        run: |
#          source ./venv/bin/activate
#          cookiecutter --no-input --overwrite-if-exists --output-dir build .
#          cd build/awesome
#          cp ./api/.env.example ./api/.env
#          make api-test
